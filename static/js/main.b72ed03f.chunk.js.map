{"version":3,"sources":["stores/root_contxt.ts","views lazy /^/.//.*$/ groupOptions: {} namespace object","routes/index.ts","App.tsx","stores/app.ts","stores/root.ts","reportWebVitals.ts","index.tsx"],"names":["RootContext","createContext","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","all","slice","keys","Object","module","exports","routers","path","page","App","fallback","item","exact","component","lazy","AppStore","count","addCount","makeAutoObservable","this","RootStore","app","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","Provider","value","StrictMode","history","createBrowserHistory","document","getElementById"],"mappings":"qHAAA,WASMA,EAAcC,wBAAyB,IAC9BD,O,6DCVf,IAAIE,EAAM,CACT,KAAM,CACL,GACA,GAED,YAAa,CACZ,GACA,EACA,GAED,aAAc,CACb,GACA,EACA,GAED,kBAAmB,CAClB,GACA,EACA,GAED,sBAAuB,CACtB,GACA,EACA,GAED,UAAW,CACV,GACA,GAED,cAAe,CACd,GACA,GAED,UAAW,CACV,GACA,EACA,GAED,WAAY,CACX,GACA,EACA,GAED,gBAAiB,CAChB,GACA,EACA,GAED,oBAAqB,CACpB,GACA,EACA,IAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B,OAAON,QAAQQ,IAAIF,EAAIG,MAAM,GAAGd,IAAIG,EAAoBK,IAAID,MAAK,WAChE,OAAOJ,EAAoBS,MAG7BX,EAAoBc,KAAO,WAC1B,OAAOC,OAAOD,KAAKf,IAEpBC,EAAoBW,GAAK,GACzBK,EAAOC,QAAUjB,G,0FClDFkB,G,MAfC,iBAAM,CAErB,CACCC,KAAM,IACNC,KAAM,SAEP,CACCD,KAAM,WACNC,KAAM,WAEP,CACCD,KAAM,SACNC,KAAM,Y,eCSOC,MAff,WACE,OACE,8BACE,cAAC,WAAD,CAAUC,SAAU,6CAApB,SACE,cAAC,IAAD,UACGJ,IAAUnB,KAAI,SAACwB,GAAD,OACb,cAAC,IAAD,CAAuBC,OAAK,EAACL,KAAMI,EAAKJ,KAAMM,UAAWC,gBAAK,kBAAM,MAAO,YAAWH,EAAKH,WAA/EG,EAAKJ,gB,gBCDdQ,EATd,aAAe,IAAD,gCAGdC,MAAQ,EAHM,KAIdC,SAAS,WACR,EAAKD,SAJLE,YAAmBC,OCINC,EAJd,aAAe,yBADfC,SACc,EACbF,KAAKE,IAAM,IAAIN,GCGFO,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqB9B,MAAK,YAAkD,IAA/C+B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,eCQdO,IAASC,OACP,cAAC,IAAYC,SAAb,CAAsBC,MAAO,IAAIb,EAAjC,SAEE,cAAC,IAAMc,WAAP,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAQC,QAASC,cAAjB,SACE,cAAC,EAAD,YAORC,SAASC,eAAe,SAM1BhB,M","file":"static/js/main.b72ed03f.chunk.js","sourcesContent":["/*\n * @Author: Fullsize\n * @Date: 2021-09-26 16:25:53\n * @LastEditors: Fullsize\n * @LastEditTime: 2021-09-26 17:54:56\n * @FilePath: /react-context/src/stores/root_contxt.ts\n */\nimport { createContext} from \"react\";\nimport RootStore from './root'\nconst RootContext = createContext<RootStore>({} as RootStore)\nexport default RootContext;","var map = {\n\t\"./\": [\n\t\t20,\n\t\t4\n\t],\n\t\"./context\": [\n\t\t12,\n\t\t0,\n\t\t3\n\t],\n\t\"./context/\": [\n\t\t12,\n\t\t0,\n\t\t3\n\t],\n\t\"./context/index\": [\n\t\t12,\n\t\t0,\n\t\t3\n\t],\n\t\"./context/index.tsx\": [\n\t\t12,\n\t\t0,\n\t\t3\n\t],\n\t\"./index\": [\n\t\t20,\n\t\t4\n\t],\n\t\"./index.tsx\": [\n\t\t20,\n\t\t4\n\t],\n\t\"./video\": [\n\t\t11,\n\t\t2,\n\t\t1\n\t],\n\t\"./video/\": [\n\t\t11,\n\t\t2,\n\t\t1\n\t],\n\t\"./video/index\": [\n\t\t11,\n\t\t2,\n\t\t1\n\t],\n\t\"./video/index.tsx\": [\n\t\t11,\n\t\t2,\n\t\t1\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 36;\nmodule.exports = webpackAsyncContext;","/*\n * @Author: Fullsize\n * @Date: 2021-09-15 17:27:47\n * @LastEditors: Fullsize\n * @LastEditTime: 2021-09-16 10:57:15\n * @FilePath: /react-context/src/routes/index.ts\n */\nconst routers = () => [\n\t\n\t{\n\t\tpath: '/',\n\t\tpage: 'index',\n\t},\n\t{\n\t\tpath: '/context',\n\t\tpage: 'context',\n\t},\n\t{\n\t\tpath: '/video',\n\t\tpage: 'video',\n\t},\n];\nexport default routers;","/*\n * @Author: Fullsize\n * @Date: 2021-09-15 17:19:25\n * @LastEditors: Fullsize\n * @LastEditTime: 2021-09-26 14:46:00\n * @FilePath: /react-context/src/App.tsx\n */\nimport React, { lazy, Suspense } from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport routers from '../src/routes'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Switch>\n          {routers().map((item: { path: string; page: string; }) => (\n            <Route key={item.path} exact path={item.path} component={lazy(() => import(`./views/${item.page}`))}>\n            </Route>\n          ))}\n        </Switch>\n      </Suspense>\n    </div>\n  );\n}\n\nexport default App;\n","/*\n * @Author: Fullsize\n * @Date: 2021-09-26 14:41:23\n * @LastEditors: Fullsize\n * @LastEditTime: 2021-09-26 16:38:29\n * @FilePath: /react-context/src/stores/app.ts\n */\nimport { makeAutoObservable } from \"mobx\"\nclass AppStore {\n\tconstructor() {\n\t\tmakeAutoObservable(this)\n\t}\n\tcount = 1;\n\taddCount=()=> {\n\t\tthis.count++;\n\t}\n}\n\nexport default AppStore;","/*\n * @Author: Fullsize\n * @Date: 2021-09-26 14:43:25\n * @LastEditors: Fullsize\n * @LastEditTime: 2021-09-26 14:45:12\n * @FilePath: /react-context/src/stores/index.ts\n */\nimport AppStore from \"./app\";\nclass RootStore {\n\tapp: AppStore;\n\tconstructor() {\n\t\tthis.app = new AppStore();\n\t}\n}\nexport default RootStore;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*\n * @Author: Fullsize\n * @Date: 2021-09-15 17:19:25\n * @LastEditors: Fullsize\n * @LastEditTime: 2021-09-28 10:30:46\n * @FilePath: /react-context/src/index.tsx\n */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport './index.css';\nimport App from './App';\nimport RootStore from './stores/root';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport RootContext from './stores/root_contxt'\nReactDOM.render(\n  <RootContext.Provider value={new RootStore()}>\n\n    <React.StrictMode>\n      <BrowserRouter>\n        <Router history={createBrowserHistory()}>\n          <App />\n        </Router>\n      </BrowserRouter>\n    </React.StrictMode>\n\n  </RootContext.Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}