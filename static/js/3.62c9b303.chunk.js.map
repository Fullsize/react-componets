{"version":3,"sources":["containers/react-context/my-context.ts","containers/react-context/Child.tsx","containers/react-context/index.tsx","views/context/index.tsx"],"names":["MyContext","React","createContext","setCount","setNumber","setStep","Child","props","useContext","fetchData","useEffect","then","res","console","log","step","number","count","onClick","Promise","resolve","reject","setTimeout","ContextPro","useState","Provider","value"],"mappings":"8IASaA,E,OAAYC,EAAMC,cAA2B,CAAEC,SAAU,aAAWC,UAAW,aAAWC,QAAS,e,eCyBjGC,EAnBgB,SAACC,GAAW,IAAD,EACWC,qBAAWR,GAAvDK,EADiC,EACjCA,QAASF,EADwB,EACxBA,SAAUC,EADc,EACdA,UAAWK,EADG,EACHA,UAMtC,OALAC,qBAAU,WACTD,IAAYE,MAAK,SAACC,GACjBC,QAAQC,IAAR,sBAA2BF,SAE1B,CAACH,IAEH,gCACC,2CAAcF,EAAMQ,QACpB,6CAAgBR,EAAMS,UACtB,4CAAeT,EAAMU,SACrB,uBACA,cAAC,IAAD,CAAQC,QAAS,kBAAMb,EAAQE,EAAMQ,KAAO,IAA5C,oBACA,cAAC,IAAD,CAAQG,QAAS,kBAAMd,EAAUG,EAAMS,OAAS,IAAhD,sBACA,cAAC,IAAD,CAAQE,QAAS,kBAAMf,EAASI,EAAMU,MAAQ,IAA9C,yBCpBGR,EAAY,WACjB,OAAO,IAAIU,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACTF,EAAQ,UAgBEG,EAZc,WAAO,IAAD,EAEVC,mBAAS,GAFC,mBAE3BT,EAF2B,KAErBV,EAFqB,OAGRmB,mBAAS,GAHD,mBAG3BP,EAH2B,KAGpBd,EAHoB,OAINqB,mBAAS,GAJH,mBAI3BR,EAJ2B,KAInBZ,EAJmB,KAKlC,OACC,cAACJ,EAAUyB,SAAX,CAAoBC,MAAO,CAAErB,UAASF,WAAUC,YAAUK,aAA1D,SACG,cAAC,EAAD,CAAOM,KAAMA,EAAMC,OAAQA,EAAQC,MAAOA,OChBhCM","file":"static/js/3.62c9b303.chunk.js","sourcesContent":["/*\n * @Author: Fullsize\n * @Date: 2021-09-16 10:10:46\n * @LastEditors: Fullsize\n * @LastEditTime: 2021-09-16 10:28:23\n * @FilePath: /react-context/src/containers/react-context/my-context.ts\n */\nimport React from \"react\";\nimport { UserContext } from './type'\nexport const MyContext = React.createContext<UserContext>({ setCount: () => { }, setNumber: () => { }, setStep: () => { } })","/*\n * @Author: Fullsize\n * @Date: 2021-09-16 10:13:13\n * @LastEditors: Fullsize\n * @LastEditTime: 2021-09-16 10:33:03\n * @FilePath: /react-context/src/containers/react-context/Child.tsx\n */\nimport React, { useContext, useEffect } from \"react\";\nimport { MyContext } from \"./my-context\";\nimport { Button } from 'antd';\ninterface Props {\n\tstep: number;\n\tnumber: number;\n\tcount: number;\n}\nconst Child: React.FC<Props> = (props) => {\n\tconst { setStep, setCount, setNumber, fetchData } = useContext(MyContext);\n\tuseEffect(() => {\n\t\tfetchData().then((res: any) => {\n\t\t\tconsole.log(`FETCH DATA: ${res}`);\n\t\t})\n\t}, [fetchData])\n\treturn (\n\t\t<div>\n\t\t\t<p>step is : {props.step}</p>\n\t\t\t<p>number is : {props.number}</p>\n\t\t\t<p>count is : {props.count}</p>\n\t\t\t<br />\n\t\t\t<Button onClick={() => setStep(props.step + 1)}>step++</Button>\n\t\t\t<Button onClick={() => setNumber(props.number + 1)}>number++</Button>\n\t\t\t<Button onClick={() => setCount(props.count + 1)}>count++</Button>\n\t\t</div>\n\t)\n}\nexport default Child;","/*\n * @Author: Fullsize\n * @Date: 2021-09-16 09:53:35\n * @LastEditors: Fullsize\n * @LastEditTime: 2021-09-16 10:31:24\n * @FilePath: /react-context/src/containers/react-context/index.tsx\n */\nimport React, { useState } from 'react';\nimport { MyContext } from './my-context';\nimport Child from './Child';\nconst fetchData = () => {\n\treturn new Promise((resolve, reject) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\t\tresolve(1);\n\t\t\t})\n\t});\n}\nconst ContextPro: React.FC = () => {\n\t\n\tconst [step, setStep] = useState(0);\n\tconst [count, setCount] = useState(0);\n\tconst [number, setNumber] = useState(0);\n\treturn (\n\t\t<MyContext.Provider value={{ setStep, setCount, setNumber,fetchData }} >\n\t\t\t  <Child step={step} number={number} count={count} />\n\t\t</MyContext.Provider>\n\t)\n}\n\nexport default ContextPro;","/*\n * @Author: Fullsize\n * @Date: 2021-09-15 18:20:14\n * @LastEditors: Fullsize\n * @LastEditTime: 2021-09-16 10:04:28\n * @FilePath: /react-context/src/views/context/index.tsx\n */\nimport ContextPro from '../../containers/react-context';\nexport default ContextPro;"],"sourceRoot":""}